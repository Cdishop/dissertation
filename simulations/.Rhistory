round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 2, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
round(rnorm(1, 1, 0.5))
time <- 50
y <- numeric(time)
y[1] <- 0
for(i in 2:time){
issues_in <- round(rnorm(1, 2, 0.5))
issues_out <- round(rnorm(1, 1, 0.5))
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y),
)
df <- data.frame(
'time' = c(1:time),
'y' = c(y),
)
time
y
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
# if p < 0.05, then stationary
adf.test(df$y)
adf.test(df$yes)
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
round(rnorm(1, 2.5, 0.5))
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 2, 0.5))
issues_out <- round(rnorm(1, 2.5, 0.5))
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 2, 0.5))
issues_out <- round(rnorm(1, 2, 0.5))
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 2, 0.5))
issues_out <- round(rnorm(1, 2, 0.5))
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
time <- 500
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 2, 0.5))
issues_out <- round(rnorm(1, 2, 0.5))
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
y[i] <- 4 + rnorm(1,0,1)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 4, 0.5))
issues_out <- issue_in
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.5))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 0.8))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
round(rnorm(1, 4, 1))
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 4, 1))
issues_out <- issue_in
y[i] <- 1*y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 4, 1))
issues_out <- issues_in
y[i] <- y[i-1] + (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
time <- 50
y <- numeric(time)
y[1] <- 4
for(i in 2:time){
issues_in <- round(rnorm(1, 4, 1))
issues_out <- issues_in
y[i] <- (issues_in - issues_out)
}
library(ggplot2)
df <- data.frame(
'time' = c(1:time),
'y' = c(y)
)
ggplot(df, aes(x = time, y = y)) +
geom_point() +
geom_line() +
theme_classic()
library(tseries)
## if p < 0.05, then stationary
adf.test(df$y)
