ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
print(i)
}
repo1lead
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% nrow() - 1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1259
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
nrow(compare12) / 2 # should result in 1248
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
df %>% filter(repoid == 1) %>% nrow() # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% max(event_at_index) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% n(event_at_index) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% count(event_at_index) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% max(count(event_at_index)) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% tally(event_at_index)) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% tally(event_at_index) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1259 days (counting 0). So minus 0 would be 1258 days
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2257 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) - 1
View(shortseries)
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) - 1 %>% pull()
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) - 1 %>% pull(max)
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max)
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1259 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1248
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in 1:1200){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
print(i)
}
repo1lead <- logical(shortseries)
count <- 0
for(i in 1:shortseries){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
print(i)
}
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
print(i)
}
repo1lead
sum(repo1lead == T)
sum(repo1lead == T) / shortseries
df <- data_frame(V1=c(2,8,1),V2=c(7,3,5),V3=c(9,6,5))
df %>%
rownames_to_column('id')
df %>%
rownames_to_column('id') %>%  # creates an ID number
gather(dept, cnt, V1:V3)
df %>%
rownames_to_column('id') %>%  # creates an ID number
gather(dept, cnt, V1:V3) %>%
group_by(id) %>%
slice(which.max(cnt))
df %>%
rownames_to_column('id') %>%  # creates an ID number
gather(dept, cnt, V1:V3) %>%
group_by(id)
df %>%
rownames_to_column('id') %>%  # creates an ID number
gather(dept, cnt, V1:V3) %>%
group_by(id) %>%
slice(which.max(cnt))
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value))
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value)) %>%
count(repo)
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value)) %>%
tally(repo)
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value)) %>%
n(repo)
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value)) %>%
count(repo == "face_recognition")
compare12 %>%
group_by(event_at_index) %>%
which.max(value)
compare12 %>%
group_by(event_at_index) %>%
slice(which.max(value))
compare12 %>%
group_by(event_at_index) %>%
rank(value)
compare12 %>%
group_by(event_at_index) %>%
filter(rank(value) == 1)
compare12 %>%
group_by(event_at_index) %>%
filter(rank(-value) == 1)
compare12 %>%
group_by(event_at_index) %>%
filter(rank(-value) == 1) %>% nrow()
compare12 %>%
group_by(event_at_index) %>%
filter(rank(-value) == 1) %>% nrow() / shortseries
View(compare12)
compare12 %>%
group_by(event_at_index) %>%
select(X, event_at_index, value, repoid)
compare12 %>%
group_by(event_at_index) %>%
select(X, event_at_index, value, repoid) %>%
rank(value)
compare12 %>%
select(X, event_at_index, value, repoid) %>%
group_by(event_at_index) %>%
rank(value)
compare12 %>%
select(X, event_at_index, value, repoid) %>%
group_by(event_at_index) %>%
mutate(rk = rank(value))
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(value)) %>%
filter(repoid == 1) %>%
filter(rk == 1)
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries
allrepos <- df %>% unique(repoid)
allrepos <- df %>% distinct(repoid)
View(df)
knitr::opts_chunk$set(echo = F, warning = F, message = F, include = F)
library(tidyverse)
df <- read.csv("../data/for-analysis-ts/daily_issues.csv")
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1238 days (counting 0).
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2187 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1238 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1238
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
print(i)
}
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries # same number. cool
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line() +
theme_classic()
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line() +
theme_bw()
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(color = repoid) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests")
View(compare12)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = repoid)) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests")
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests")
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests", legend = NULL)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = NULL)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests", legend = "Series") +
theme(legend.title = NULL)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests", legend = "Series") +
theme(legend.title = element_blank())
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point(aes(color = as.factor(repoid))) +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point(aes(color = as.factor(repoid)), color = 'black') +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
allrepos <- df %>% distinct(repoid)
View(allrepos)
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos <- df %>% distinct(repoid) %>%
cross()
View(allrepos)
allrepos <- df %>% distinct(repoid) %>%
cross_df()
View(allrepos)
allrepos <- df %>% distinct(repoid) %>%
crossing()
View(allrepos)
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
cross_df(allrepos, allrepos)
expand.grid(allrepos, allrepos)
allrepose <- data.frame(repo1 = c(allrepos),
repo2 = c(allrespos))
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepose <- data.frame(repo1 = c(allrepos),
repo2 = c(allrespos))
allrepose <- data.frame(repo1 = c(allrepos),
repo2 = c(allrepos))
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrespos1, allrepos2, by = NULL), repo1 <= repo2)
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
View(crossrepos)
pair <- crossrepos %>%
filter(1)
pair <- crossrepos %>%
slice(1)
View(pair)
pair <- crossrepos %>%
slice(2)
pair$repo2
pair$repo1
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
series_n <- 530
pair <- crossrepos %>%
slice(2)
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / series_n
length(crossrepos)
for(j in 1:length(crossrepos)){
print(j)
}
for(j in seq_along(1:length(crossrepos))){
print(j)
}
print(j)
for(j in 1:nrow(crossrepos)){
print(j)
}
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
pair <- crossrepos %>%
slice(3)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / series_n
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow()
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow()
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1)
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
pair <- crossrepos %>%
slice(6)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1)
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1)
plotpair <- round(savepair, 1)
plotpair
ggplot() + geom_histogram(aes(plotpair))
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
0.67*530
