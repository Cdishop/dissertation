print(j)
for(j in 1:nrow(crossrepos)){
print(j)
}
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
pair <- crossrepos %>%
slice(3)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / series_n
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow()
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow()
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1)
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
pair <- crossrepos %>%
slice(6)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value))
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1)
df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1)
plotpair <- round(savepair, 1)
plotpair
ggplot() + geom_histogram(aes(plotpair))
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
0.67*530
knitr::opts_chunk$set(echo = F, warning = F, message = F, include = F)
library(tidyverse)
df <- read.csv("../data/for-analysis-ts/daily_issues.csv")
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1238 days (counting 0).
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2187 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1238 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1238
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
}
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries # same number. cool
library(ggplot2)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(6)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
plotpair <- round(savepair, 1)
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
plotpair <- round(savepair, 1)
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
knitr::opts_chunk$set(echo = F, warning = F, message = F, include = F)
library(tidyverse)
df <- read.csv("../data/for-analysis-ts/daily_issues.csv")
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1238 days (counting 0).
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2187 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1238 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1238
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
}
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries # same number. cool
library(ggplot2)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(6)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
savepair
plotpair <- round(savepair, 1)
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
knitr::opts_chunk$set(echo = F, warning = F, message = F, include = F)
library(tidyverse)
df <- read.csv("../data/for-analysis-ts/daily_issues.csv")
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1238 days (counting 0).
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2187 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1238 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1238
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
}
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries # same number. cool
library(ggplot2)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
plotpair <- round(savepair, 1)
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
ggplot() + geom_density(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
hm <- data.frame(
'freqs' = c(plotpair)
)
hm %>%
count(freqs)
hm %>%
count(freqs) %>%
mutate(perc = n / 595)
hm <- data.frame(
'freqs' = c(plotpair)
)
hm <- hm %>%
count(freqs) %>%
mutate(perc = n / 595)
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw()
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank())
g1 <- ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank())
ggsave(g1, "empirical.png")
png("empirical.png")
print(g1)
dev.off()
g1 <- ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank())
ggsave(g1, "empirical.png")
ggsave(g1, "empirical.png", device = NULL)
png("g1.png")
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank())
hm <- data.frame(
'freqs' = c(plotpair)
)
hm <- hm %>%
count(freqs) %>%
mutate(perc = n / 595)
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank())
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank()) +
theme(axis.title.y = element_text(angle = 0))
ggplot(hm, aes(x = freqs, y = perc)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Time", y = "Probability of Spending n Periods in the Lead") +
theme(axis.text.x = element_blank()) +
theme(axis.title.y = element_text(angle = 0))
knitr::opts_chunk$set(echo = F, warning = F, message = F, include = F)
library(tidyverse)
df <- read.csv("../data/for-analysis-ts/daily_issues.csv")
df %>% filter(repoid == 1) %>% summarize(max = max(event_at_index)) # first series has 1238 days (counting 0).
df %>% filter(repoid == 2) %>% summarize(max = max(event_at_index)) # second series has 2187 days
# so, use the first series as a filter. In other words, filter the 2nd series to just its first 1238 days
shortseries <- df %>% filter(repoid == 1) %>% summarize(max = round(max(event_at_index))) %>% pull(max) %>% -1
compare12 <- df %>%
filter(repoid %in% c(1,2)) %>%
filter(event_at_index %in% c(1:shortseries))
nrow(compare12) / 2 # should result in 1238
tail(compare12 %>%
filter(repoid == 1) %>%
select(event_at_index))
tail(compare12 %>%
filter(repoid == 2) %>%
select(event_at_index))
repo1lead <- logical(shortseries)
count <- 0
for(i in seq_along(1:shortseries)){
count <- count + 1
ontop <- FALSE
use <- compare12 %>%
filter(event_at_index == i)
rep1val <- use %>% filter(repoid == 1) %>% pull(value)
rep2val <- use %>% filter(repoid == 2) %>% pull(value)
if(rep1val > rep2val){ontop <- TRUE}
repo1lead[count] <- ontop
}
sum(repo1lead == T) / shortseries # indeed, 99% of the time, repo 1 is on top
compare12 %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == 1) %>%
filter(rk == 1) %>%
nrow() / shortseries # same number. cool
View(compare12)
library(ggplot2)
ggplot(compare12, aes(x = event_at_index, y = value, group = repoid)) +
geom_point() +
geom_line(aes(color = as.factor(repoid))) +
theme_bw() +
labs(x = 'Time', y = "Number of Requests") +
theme(legend.title = element_blank())
allrepos <- df %>% distinct(repoid) %>% pull(repoid)
allrepos1 <- data.frame(repo1 = c(allrepos))
allrepos2 <- data.frame(repo2 = c(allrepos))
crossrepos <- subset(merge(allrepos1, allrepos2, by = NULL), repo1 <= repo2)
crossrepos <- crossrepos %>%
filter(repo1 != repo2)
series_n <- 530
savepair <- numeric(nrow(crossrepos))
for(j in 1:nrow(crossrepos)){
pair <- crossrepos %>%
slice(j)
percent <- df %>%
filter(repoid %in% c(pair$repo1, pair$repo2)) %>%
filter(event_at_index %in% c(1:series_n)) %>%
select(X, event_at_index, value, repoid, repo) %>%
group_by(event_at_index) %>%
mutate(rk = rank(-value)) %>%
filter(repoid == pair$repo1) %>%
filter(rk == 1) %>%
nrow() / series_n
savepair[j] <- percent
}
plotpair <- round(savepair, 1)
ggplot() + geom_histogram(aes(plotpair)) +
theme_bw() +
labs(x = "Fraction Of Periods With Max Requests", y = "Count")
