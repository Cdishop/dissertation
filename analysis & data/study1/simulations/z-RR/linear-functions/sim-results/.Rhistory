a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
a_file_labels <- gsub(".csv", "", a_file_names)
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = a_file_labels[1])
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(data.table)
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
a_file_labels <- gsub(".csv", "", a_file_names)
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = a_file_labels[1])
View(df)
df <- df %>%
mutate(simulation = "1asweepb")
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
a_file_labels <- gsub(".csv", "", a_file_names)
a_file_lables <- gsub("../../simulations/z-RR/sweep-b/sim-results/", "", a_file_labels)
a_file_lables
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
a_file_labels <- gsub(".csv", "", a_file_names)
a_file_lables <- gsub("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb", "", a_file_labels)
a_file_lables
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
a_file_labels <- gsub(".csv", "", a_file_names)
a_file_lables <- gsub("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/sim1asweepb", "", a_file_labels)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(data.table)
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = "1asweepb")
count <- 1
for(file in a_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "1asweepb")
df <- bind_rows(df, new_df)
}
View(df)
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = "Requests Accumulate")
count <- 1
for(file in a_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Accumulate")
df <- bind_rows(df, new_df)
}
View(df)
b_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1b-sweepb/*.csv")
blah <- read.csv(b_file_names[1])
blah <- blah %>%
mutate(simulation = "Requests Do Not Accumulate")
View(blah)
df <- bind_rows(df, blah)
View(df)
count <- 1
for(file in b_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Do Not Accumulate")
df <- bind_rows(df, new_df)
}
View(df)
ggplot(df, aes(x = k, y = probability, shape = b_val)) +
geom_point() +
facet_grid(simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df, aes(x = k, y = probability, shape = b_val)) +
geom_point() +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df, aes(x = k, y = probability, shape = factor(b_val))) +
geom_point() +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df, aes(x = k, y = probability, color = factor(b_val))) +
geom_point() +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df, aes(x = k, y = probability, color = factor(b_val))) +
geom_point() +
geom_line() +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point() +
geom_line() +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point() +
geom_line(alpha = 0.2) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.4) +
geom_line(alpha = 0.2) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.2) +
geom_line(alpha = 0.2) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", legend = "b")
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
source("~/Desktop/dissertation/analysis & data/study1/plots/z-RR/plot-results-sweepb.R", echo=TRUE)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(data.table)
# load and merge all simulation results
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = "Requests Accumulate")
count <- 1
for(file in a_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Accumulate")
df <- bind_rows(df, new_df)
}
# now do the same thing for the requests do not accumulate condition
b_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1b-sweepb/*.csv")
blah <- read.csv(b_file_names[1])
blah <- blah %>%
mutate(simulation = "Requests Do Not Accumulate")
df <- bind_rows(df, blah)
count <- 1
for(file in b_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Do Not Accumulate")
df <- bind_rows(df, new_df)
}
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
g <- ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_grid(~simulation) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
ggsave('sweepb.pdf', g, width = 5, height = 5)
ggsave('sweepb.pdf', g, width = 7, height = 5)
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_wrap(~simulation, ncol = 1) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
g <-ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_wrap(~simulation, ncol = 1) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
ggsave('sweepb.pdf', g, width = 7, height = 7)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(data.table)
# load and merge all simulation results
a_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1a-sweepb/*.csv")
df <- read.csv(a_file_names[1])
df <- df %>%
mutate(simulation = "Requests Accumulate")
count <- 1
for(file in a_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Accumulate")
df <- bind_rows(df, new_df)
}
# now do the same thing for the requests do not accumulate condition
b_file_names <- Sys.glob("../../simulations/z-RR/sweep-b/sim-results/1b-sweepb/*.csv")
blah <- read.csv(b_file_names[1])
blah <- blah %>%
mutate(simulation = "Requests Do Not Accumulate")
df <- bind_rows(df, blah)
count <- 1
for(file in b_file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = "Requests Do Not Accumulate")
df <- bind_rows(df, new_df)
}
ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_wrap(~simulation, ncol = 1) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
g <-ggplot(df %>% filter(!b_val == 0), aes(x = k, y = probability, color = factor(b_val))) +
geom_point(alpha = 0.8) +
geom_line(alpha = 0.8) +
facet_wrap(~simulation, ncol = 1) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability", color = "b")
ggsave('sweepb.pdf', g, width = 7, height = 5)
ggsave('sweepb.pdf', g, width = 6, height = 4)
ggsave('sweepb.pdf', g, width = 6, height = 5.5)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(data.table)
# load and merge all simulation results
setwd("../../simulations/z-RR/linear-functions/sim-results")
file_names <- Sys.glob("*.csv")
file_labels <- gsub(".csv", "", file_names)
df <- read.csv(file_names[1])
df <- df %>%
mutate(simulation = file_labels[1])
count <- 1
for(file in file_names[-1]){
count <- count + 1
new_df <- read.csv(file)
new_df <- new_df %>%
mutate(simulation = file_labels[count])
df <- bind_rows(df, new_df)
}
# sim 3 = respond to influx; sim 4 = respond to outflow
# a = random & inertia
# b = random & no inertia
df <- df %>%
mutate(response = case_when(
simulation == "sim3a-linear" | simulation == "sim3b-linear" ~ "Respond To Influx",
simulation == "sim4a-linear" | simulation == "sim4b-linear" ~ "Respond To Outflow"
)) %>%
mutate(situation = case_when(
simulation == "sim3a-linear" | simulation == "sim4a-linear" ~ "Sustained Lead",
simulation == "sim3b-linear" | simulation == "sim4b-linear" ~ "No Sustained Lead"
))
df <- df %>%
mutate(situation = factor(situation,
levels = c("Sustained Lead",
"No Sustained Lead")))
ggplot(df, aes(x = k, y = probability)) +
geom_bar(stat = "identity") +
facet_grid(situation ~ response) +
theme_classic(base_size = 15) +
labs(x = "Time Spent", y = "Probability")
ggsave('sweeplinear.pdf', g, width = 10, height = 7)
g <- ggplot(df, aes(x = k, y = probability)) +
geom_bar(stat = "identity") +
facet_grid(situation ~ response) +
theme_classic(base_size = 20) +
labs(x = "Time Spent", y = "Probability")
ggsave('sweeplinear.pdf', g, width = 10, height = 7)
